apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.microservice.name }}
  namespace: {{ .Values.microservice.namespace }}

spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.microservice.appName }}
      app.kubernetes.io/instance: {{ .Values.microservice.name }}
  serviceName: {{ .Values.microservice.name }}
  replicas: {{ .Values.microservice.replicas }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.microservice.appName }}
        app.kubernetes.io/component: {{ .Values.microservice.component }}
        app.kubernetes.io/instance: {{ .Values.microservice.name }}
        
    spec:
      containers:
      - name: {{ .Values.microservice.name }}
        image: {{ .Values.workload.image }}
        envFrom:
          - secretRef:
              name: "{{ .Values.microservice.name }}-secret"
          - configMapRef:
              name: "{{ .Values.microservice.name }}-config"
        ports:
        - containerPort: {{ .Values.workload.port }}
        volumeMounts:
        - name: "{{ .Values.microservice.name }}-persistent-storage"
          mountPath: /var/lib/postgresql/data

  volumeClaimTemplates:
  - metadata:
      name: "{{ .Values.microservice.name }}-persistent-storage"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi